// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.6.21'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // Firebase Crashlytics
        // see: https://firebase.google.com/docs/crashlytics/get-started?platform=android
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//plugins {
//    id 'com.android.application' version '7.2.1' apply false
//    id 'com.android.library' version '7.2.1' apply false
//    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
//}

allprojects {

    Properties properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    }

    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = 'mapbox'
//                password = property('MAPBOX_DOWNLOADS_TOKEN')
                password = properties.getProperty('MAPBOX_ACCESS_TOKEN')
            }
        }
        // Mapbox Snapshot repository required to get the new asset tracking navigation profile.
        maven {
            url 'https://api.mapbox.com/downloads/v2/snapshots/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = 'mapbox'
                password = properties.getProperty('MAPBOX_ACCESS_TOKEN')
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}